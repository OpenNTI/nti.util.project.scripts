#!/usr/bin/env bash
set -e
#sometimes git returns strange things...this seems to clear the bad state.
git status &> /dev/null

#check for unstaged tracked files
if ! git diff-files --quiet; then
	echo 'There are uncommitted changes. Aborting.'
	exit 1
fi

#check for staged/not committed files
if ! git diff-index --quiet --cached HEAD; then
	echo 'There are uncommitted changes. Aborting.'
	exit 1
fi

lerna publish --yes

DIRS=packages/*

for f in $DIRS;
do
	if [ ! -d $f ] ; then
		continue
	fi

	if [[ -f "${f}/.skip-alpha" ]] ; then
		continue
	fi

	(
	cd $f;

	# point all "nti-" dependencies to the snapshot tag.
	node <<EOF > .package-alpha.json
		process.stdout.write(
			JSON.stringify(
				(json => ([
						json.dependencies,
						json.devDependencies
					].forEach(deps =>
						deps && Object.keys(deps)
							.filter(x => x.startsWith('nti-'))
							.forEach(x => (o => o[x] = 'alpha')(deps))
					),
					json.version = json.version + '-alpha',
					json
				))(require('./package.json')), void 0, 2
			)
		)
EOF

	#replace the package.json with the temp...
	mv .package-alpha.json package.json
	PACKAGE=`node -e "console.log((o => o.name+'@'+o.version)(require('./package.json')))"`
	EXISTS=`npm view $PACKAGE`
	if [ ${#EXISTS} == 0 ] ; then
		npm publish --tag alpha
	fi

	git checkout package.json
	)
done
